name: Folia

on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 * * *"

jobs:
  build-dev:
    runs-on: ubuntu-latest
    steps:
      - name: 配置 Git 信息
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - uses: actions/checkout@v4

      - name: 预备 ZuluJDK21 环境
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: 设置时区
        run: |
          sudo timedatectl set-timezone Asia/Shanghai

      - name: 获取 dev 分支名
        id: dev1
        run: |
          git clone https://github.com/PaperMC/Folia.git ~/folia
          cd ~/folia
          echo "::set-output name=dev1::$(git branch -a | grep dev | sed 's/^.................//')"

      - name: 克隆并切换到 dev 分支
        run: |
          cd ~
          rm -rf folia
          git clone https://github.com/PaperMC/Folia.git -b ${{ steps.dev1.outputs.dev1 }}

      - name: 补丁环境
        run: |
          cd ~/folia
          ./gradlew applyPatches

      - name: 构建
        run: |
          cd ~/folia
          ./gradlew createMojmapPaperclipJar

      - name: 获取日期
        id: date1
        run: echo "::set-output name=date1::$(date +'%Y-%m-%d')"

      - name: 获取 jar 文件名
        id: get_name1
        run: echo "::set-output name=name1::$(ls ~/folia/build/libs/ | grep paperclip)"

      - name: 创建 Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date1.outputs.date1 }}
          release_name: ${{ steps.date1.outputs.date1 }}
          draft: false
          prerelease: true

      - name: 上传 Release 资产
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: /home/runner/folia/build/libs/${{ steps.get_name1.outputs.name1 }}
          asset_name: ${{ steps.get_name1.outputs.name1 }}
          asset_content_type: application/java-archive